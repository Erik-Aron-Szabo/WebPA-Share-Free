
@{
    ViewData["Title"] = "MyGroups";
}
@using Sharing_Free.Services;
@using Share_Free.Domain;
@using Microsoft.AspNetCore.Http;
@using Share_Free.Controllers;
<head>
    <script src="~/js/Group.js" defer></script>
</head>
@{GroupService gService = new GroupService(); }
<div>
    <h2>MyGroups</h2>
    <ul>
        @{
            // I don't know how to list all the groups, where the user is in

            string username = Context.User.FindFirst("Username").Value.ToString();
            int userId = Convert.ToInt32(Context.User.FindFirst("Id").Value.ToString());
            List<Group> myGroups = gService.UserGroups(userId, username);
            // HIBA - 0 count

            foreach (var myGroup in myGroups)
            {
                <li>
                    <p>Group Name: @myGroup.Name</p>

                    <button onclick="leaveGroup()">Leave Group</button>
                </li>
            }
        }
    </ul>
    <h2>Available Groups</h2>

    <ul>

        @{
            List<Group> allGroups = gService.GetAllGroups();
            int userId2 = Convert.ToInt32(Context.User.FindFirst("Id").Value.ToString());
            /*foreach (var group in allGroups)
            {
                foreach (var myGroup in myGroups)
                {
                    if (group.Name != myGroup.Name)
                    {
                        <li>
                            <p>Group Name: @group.Name</p>
                            
                            <button onclick="joinGroup()">Join Group</button>
                        </li>
                    }
                }
            }*/
            List<string> allgroupsName = new List<string>();
            List<string> mygroupsName = new List<string>();
            for (int i = 0; i < allGroups.Count; i++)
            {
                allgroupsName.Add(allGroups[i].Name);
            }
            for (int i = 0; i < myGroups.Count; i++)
            {
                mygroupsName.Add(myGroups[i].Name);
            }
            var availableGroups = allgroupsName.Except(mygroupsName);
            foreach (var group in allGroups)
            {
                foreach (var availableGroupName in availableGroups)
                {
                    if (availableGroupName == group.Name)
                    {
                        <li>
                            <p>Group Name: @group.Name</p>
                            <input id="groupId" type="number" name="groupId" value="@group.Id" hidden />
                            <input id="userId" type="number" name="userId" value="@userId2" hidden />
                            <button onclick="joinGroup()">Join Group</button>
                        </li>
                    }
                }
            }

        }
    </ul>
</div>

<div>
    
</div>

@{ /* Join group = button, onclick -> XHR(POST) -> insert username
     * into group table (POSTGRES)
     * refresh my groups, or the page, and it will show user joined
     * in the choosen group
     --------------------------------------------------------
     Same with Leave group,
     button (leave) onclick -> XHR (POST) -> delete from group,
     where username = @username? Can this work in an ARRAY?
     */
}

